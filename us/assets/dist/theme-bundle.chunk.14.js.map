{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/utils/form-utils.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","_CatalogPage","apply","arguments","_proto","prototype","formatCategoryTreeForJSTree","node","_this","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","navigate","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","activateTab","searchData","url","count","urlUtils","replaceParams","page","goToUrl","showContent","$tabToActivate","find","each","idx","tab","$tab","is","removeAttr","attr","onTabChangeWithArrows","event","eventKey","which","$tabsCollection","index","document","activeElement","nextTabIdx","$activeTab","activeTabIdx","lastTabIdx","length","get","focus","trigger","onReady","_this2","compareProducts","context","urls","$searchForm","$categoryTreeContainer","Url","parse","window","location","href","treeData","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","preventDefault","query","section","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","_step","_iterator","_createForOfIteratorHelperLoose","done","categoryId","value","input","type","name","append","setTimeout","console","log","loadTreeNodes","cb","_this3","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","formattedResults","dataNode","$container","_this4","treeOptions","core","themes","icons","checkbox","three_state","plugins","_this5","_this$context","onMinPriceError","onMaxPriceError","minPriceNotEntered","maxPriceNotEntered","onInvalidPrice","$contentListingContainer","$searchHeading","$searchCount","$contentCount","requestOptions","template","productListing","contentListing","sidebar","heading","productCount","contentCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","triggerHandler","animate","scrollTop","validationErrorMessages","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","forms","email","test","password","notEmpty","inputTagNames","createPasswordValidationErrorTextObject","empty","confirm","mismatch","invalid","onEmptyPasswordErrorText","onConfirmPasswordErrorText","onMismatchPasswordErrorText","onNotValidPasswordErrorText","classifyForm","formSelector","options","$inputs","join","_options$formFieldCla","formFieldClass","__","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","_includes","_camelCase","_capitalize","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","errorText","val","setPasswordValidation","passwordSelector","password2Selector","requirements","_ref","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","setMinMaxPriceValidation","selectors","priceValidationErrorTexts","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","_priceValidationError","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","Object","keys","classes","hasClass","_PageManager","currentTarget","queryParams","serialize","split","format","pathname","search","buildQueryString","PageManager","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","callback","_extend","collapsedFacets","collapsedFacetItems","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","getUrl","api","getPage","err","hide","Error","customLoadProductSizes","li","proID","forProID","proPrice","discountedPrice","Number","trim","replace","toFixed","utils","product","getById","response","availableSizes","i","obj","expandFacetItems","$navList","_without","hasMoreResults","_union","toggleFacetItems","getMoreFacetResults","facet","facetUrl","open","params","list_all","updateContent","close","$items","element","indexOf","expandFacet","$accordionToggle","collapseFacet","expandAllFacets","priceRangeValidator","_this6","_this7","unbindEvents","onPopState","off","stopPropagation","$toggle","$link","toggleClass","urlQueryParams","assign","constants","VALID","decodeURI","key","parseQueryParams","hasOwnProperty","reload","currentUrl","URLSearchParams","has","updatedLinkUrl","history","replaceState","title"],"mappings":"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","file":"theme-bundle.chunk.14.js","sourcesContent":["import { hooks,api } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport FacetedSearch from './common/faceted-search';\nimport compareProducts from './global/compare-products';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\nimport collapsibleFactory from './common/collapsible';\nimport 'jstree';\nimport nod from './common/nod';\nimport utils from \"@bigcommerce/stencil-utils\";\n\n\nconst leftArrowKey = 37;\nconst rightArrowKey = 39;\n\nexport default class Search extends CatalogPage {\n    formatCategoryTreeForJSTree(node) {\n        const nodeData = {\n            text: node.data,\n            id: node.metadata.id,\n            state: {\n                selected: node.selected,\n            },\n        };\n\n        if (node.state) {\n            nodeData.state.opened = node.state === 'open';\n            nodeData.children = true;\n        }\n\n        if (node.children) {\n            nodeData.children = [];\n            node.children.forEach((childNode) => {\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\n            });\n        }\n\n        return nodeData;\n    }\n\n    showProducts(navigate = true) {\n        this.$productListingContainer.removeClass('u-hidden');\n        this.$facetedSearchContainer.removeClass('u-hidden');\n        this.$contentResultsContainer.addClass('u-hidden');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-content-results-toggle]').addClass('navBar-action');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action');\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\n\n        this.activateTab($('[data-product-results-toggle]'));\n\n        if (!navigate) {\n            return;\n        }\n\n        const searchData = $('#search-results-product-count span').data();\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\n            page: 1,\n        });\n\n        urlUtils.goToUrl(url);\n    }\n\n    showContent(navigate = true) {\n        this.$contentResultsContainer.removeClass('u-hidden');\n        this.$productListingContainer.addClass('u-hidden');\n        this.$facetedSearchContainer.addClass('u-hidden');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-product-results-toggle]').addClass('navBar-action');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action');\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\n\n        this.activateTab($('[data-content-results-toggle]'));\n\n        if (!navigate) {\n            return;\n        }\n\n        const searchData = $('#search-results-content-count span').data();\n        const url = (searchData.count > 0) ? searchData.url : urlUtils.replaceParams(searchData.url, {\n            page: 1,\n        });\n\n        urlUtils.goToUrl(url);\n    }\n\n    activateTab($tabToActivate) {\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\n\n        $tabsCollection.each((idx, tab) => {\n            const $tab = $(tab);\n\n            if ($tab.is($tabToActivate)) {\n                $tab.removeAttr('tabindex');\n                $tab.attr('aria-selected', true);\n                return;\n            }\n\n            $tab.attr('tabindex', '-1');\n            $tab.attr('aria-selected', false);\n        });\n    }\n\n    onTabChangeWithArrows(event) {\n        const eventKey = event.which;\n        const isLeftOrRightArrowKeydown = eventKey === leftArrowKey\n            || eventKey === rightArrowKey;\n        if (!isLeftOrRightArrowKeydown) return;\n\n        const $tabsCollection = $('[data-search-page-tabs]').find('[role=\"tab\"]');\n\n        const isActiveElementNotTab = $tabsCollection.index($(document.activeElement)) === -1;\n        if (isActiveElementNotTab) return;\n\n        const $activeTab = $(`#${document.activeElement.id}`);\n        const activeTabIdx = $tabsCollection.index($activeTab);\n        const lastTabIdx = $tabsCollection.length - 1;\n\n        let nextTabIdx;\n        switch (eventKey) {\n        case leftArrowKey:\n            nextTabIdx = activeTabIdx === 0 ? lastTabIdx : activeTabIdx - 1;\n            break;\n        case rightArrowKey:\n            nextTabIdx = activeTabIdx === lastTabIdx ? 0 : activeTabIdx + 1;\n            break;\n        default: break;\n        }\n\n        $($tabsCollection.get(nextTabIdx)).focus().trigger('click');\n    }\n\n    onReady() {\n        compareProducts(this.context.urls);\n\n        const $searchForm = $('[data-advanced-search-form]');\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\n        const url = Url.parse(window.location.href, true);\n        const treeData = [];\n        this.$productListingContainer = $('#product-listing-container');\n        this.$facetedSearchContainer = $('#faceted-search-container');\n        this.$contentResultsContainer = $('#search-results-content');\n\n        // Init faceted search\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        $('[data-product-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showProducts();\n        });\n\n        $('[data-content-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showContent();\n        });\n\n        $('[data-search-page-tabs]').on('keyup', this.onTabChangeWithArrows);\n\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\n            this.showContent(false);\n        } else {\n            this.showProducts(false);\n        }\n\n        const validator = this.initValidation($searchForm)\n            .bindValidation($searchForm.find('#search_query_adv'));\n\n        this.context.categoryTree.forEach((node) => {\n            treeData.push(this.formatCategoryTreeForJSTree(node));\n        });\n\n        this.categoryTreeData = treeData;\n        this.createCategoryTree($categoryTreeContainer);\n\n        $searchForm.on('submit', event => {\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\n\n            if (!validator.check()) {\n                return event.preventDefault();\n            }\n\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\n\n            for (const categoryId of selectedCategoryIds) {\n                const input = $('<input>', {\n                    type: 'hidden',\n                    name: 'category[]',\n                    value: categoryId,\n                });\n\n                $searchForm.append(input);\n            }\n        });\n\n        setTimeout(() => {\n            $('[data-search-aria-message]').removeClass('u-hidden');\n        }, 100);\n\n        console.log(\"Searchhhhhhhhhhhhhhhhhhhhhhhh.js\");\n    }\n\n\n    loadTreeNodes(node, cb) {\n        $.ajax({\n            url: '/remote/v1/category-tree',\n            data: {\n                selectedCategoryId: node.id,\n                prefix: 'category',\n            },\n            headers: {\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\n            },\n        }).done(data => {\n            const formattedResults = [];\n\n            data.forEach((dataNode) => {\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\n            });\n\n            cb(formattedResults);\n        });\n    }\n\n    createCategoryTree($container) {\n        const treeOptions = {\n            core: {\n                data: (node, cb) => {\n                    // Root node\n                    if (node.id === '#') {\n                        cb(this.categoryTreeData);\n                    } else {\n                        // Lazy loaded children\n                        this.loadTreeNodes(node, cb);\n                    }\n                },\n                themes: {\n                    icons: true,\n                },\n            },\n            checkbox: {\n                three_state: false,\n            },\n            plugins: [\n                'checkbox',\n            ],\n        };\n\n        $container.jstree(treeOptions);\n    }\n\n    initFacetedSearch() {\n        // eslint-disable-next-line object-curly-newline\n        const { onMinPriceError, onMaxPriceError, minPriceNotEntered, maxPriceNotEntered, onInvalidPrice } = this.context;\n        const $productListingContainer = $('#product-listing-container');\n        const $contentListingContainer = $('#search-results-content');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const $searchHeading = $('#search-results-heading');\n        const $searchCount = $('#search-results-product-count');\n        const $contentCount = $('#search-results-content-count');\n        const productsPerPage = this.context.searchProductsPerPage;\n        const requestOptions = {\n            template: {\n                productListing: 'search/product-listing',\n                contentListing: 'search/content-listing',\n                sidebar: 'search/sidebar',\n                heading: 'search/heading',\n                productCount: 'search/product-count',\n                contentCount: 'search/content-count',\n            },\n            config: {\n                product_results: {\n                    limit: productsPerPage,\n                },\n            },\n            showMore: 'search/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $searchHeading.html(content.heading);\n\n            const url = Url.parse(window.location.href, true);\n            if (url.query.section === 'content') {\n                $contentListingContainer.html(content.contentListing);\n                $contentCount.html(content.contentCount);\n                this.showContent(false);\n            } else {\n                $productListingContainer.html(content.productListing);\n                $facetedSearchContainer.html(content.sidebar);\n                $searchCount.html(content.productCount);\n                this.showProducts(false);\n            }\n\n            $('body').triggerHandler('compareReset');\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        }, {\n            validationErrorMessages: {\n                onMinPriceError,\n                onMaxPriceError,\n                minPriceNotEntered,\n                maxPriceNotEntered,\n                onInvalidPrice,\n            },\n        });\n    }\n\n    initValidation($form) {\n        this.$form = $form;\n        this.validator = nod({\n            submit: $form,\n        });\n\n        return this;\n    }\n\n    bindValidation($element) {\n        if (this.validator) {\n            this.validator.add({\n                selector: $element,\n                validate: 'presence',\n                errorMessage: $element.data('errorMessage'),\n            });\n        }\n\n        return this;\n    }\n\n    check() {\n        if (this.validator) {\n            this.validator.performCheck();\n            return this.validator.areAll('valid');\n        }\n\n        return false;\n    }\n}\n","const forms = {\n    email(value) {\n        const re = /^.+@.+\\..+/;\n        return re.test(value);\n    },\n\n    /**\n     * Validates a password field\n     * @param value\n     * @returns {boolean}\n     */\n    password(value) {\n        return this.notEmpty(value);\n    },\n\n    /**\n     * validates if a field is empty\n     * @param value\n     * @returns {boolean}\n     *\n     */\n    notEmpty(value) {\n        return value.length > 0;\n    },\n};\n\nexport default forms;\n","import _ from 'lodash';\nimport nod from '../nod';\nimport forms from '../models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n/**\n * Set up Object with Error Messages on Password Validation. Please use messages in mentioned order\n * @param {string} empty defines error text for empty field\n * @param {string} confirm defines error text for empty confirmation field\n * @param {string} mismatch defines error text if confirm passford mismatches passford field\n * @param {string} invalid defines error text for invalid password charaters sequence\n * @return {object} messages or default texts if nothing is providing\n */\nexport const createPasswordValidationErrorTextObject = (empty, confirm, mismatch, invalid) => ({\n    onEmptyPasswordErrorText: empty,\n    onConfirmPasswordErrorText: confirm,\n    onMismatchPasswordErrorText: mismatch,\n    onNotValidPasswordErrorText: invalid,\n});\n\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     * @param {string} errorText describes errorMassage on email validation\n     */\n    setEmailValidation: (validator, field, errorText) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: errorText,\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param {object} errorTextsObject\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, {\n        onEmptyPasswordErrorText, onConfirmPasswordErrorText, onMismatchPasswordErrorText, onNotValidPasswordErrorText,\n    }, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: onEmptyPasswordErrorText,\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: onNotValidPasswordErrorText,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: onConfirmPasswordErrorText,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: onMismatchPasswordErrorText,\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors, priceValidationErrorTexts = {}) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        // eslint-disable-next-line object-curly-newline\n        const { onMinPriceError, onMaxPriceError, minPriceNotEntered, maxPriceNotEntered, onInvalidPrice } = priceValidationErrorTexts;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: onMinPriceError,\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: onMaxPriceError,\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: maxPriceNotEntered,\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: minPriceNotEntered,\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: onInvalidPrice,\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field, errorText) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: errorText,\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n","import PageManager from './page-manager';\nimport urlUtils from './common/utils/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from \"@bigcommerce/stencil-utils\";\nimport _ from \"lodash\";\nimport Url from \"url\";\nimport urlUtils from \"./utils/url-utils\";\nimport modalFactory from \"../global/modal\";\nimport collapsibleFactory from \"./collapsible\";\nimport { Validators } from \"./utils/form-utils\";\nimport nod from \"./nod\";\nimport utils from \"@bigcommerce/stencil-utils\";\nimport carousel from \"./../common/carousel\";\n\nconst defaultOptions = {\n  accordionToggleSelector:\n    \"#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle\",\n  blockerSelector: \"#facetedSearch .blocker\",\n  clearFacetSelector: \"#facetedSearch .facetedSearch-clearLink\",\n  componentSelector: \"#facetedSearch-navList\",\n  facetNavListSelector: \"#facetedSearch .navList\",\n  priceRangeErrorSelector: \"#facet-range-form .form-inlineMessage\",\n  priceRangeFieldsetSelector: \"#facet-range-form .form-fieldset\",\n  priceRangeFormSelector: \"#facet-range-form\",\n  priceRangeMaxPriceSelector: \"#facet-range-form [name=max_price]\",\n  priceRangeMinPriceSelector: \"#facet-range-form [name=min_price]\",\n  //   showMoreToggleSelector: \"#facetedSearch .accordion-content .toggleLink\",\n  showMoreToggleSelector: \"#facetedSearch #facetedSearch-navList .toggleLink\",\n  facetedSearchFilterItems: \"#facetedSearch-filterItems .form-input\",\n  modal: modalFactory(\"#modal\")[0],\n  modalOpen: false,\n};\n\n/**\n * Faceted search view component\n */\nclass FacetedSearch {\n  /**\n   * @param {object} requestOptions - Object with options for the ajax requests\n   * @param {function} callback - Function to execute after fetching templates\n   * @param {object} options - Configurable options\n   * @example\n   *\n   * let requestOptions = {\n   *      templates: {\n   *          productListing: 'category/product-listing',\n   *          sidebar: 'category/sidebar'\n   *     }\n   * };\n   *\n   * let templatesDidLoad = function(content) {\n   *     $productListingContainer.html(content.productListing);\n   *     $facetedSearchContainer.html(content.sidebar);\n   * };\n   *\n   * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\n   */\n  constructor(requestOptions, callback, options) {\n    // Private properties\n    this.requestOptions = requestOptions;\n    this.callback = callback;\n    this.options = _.extend({}, defaultOptions, options);\n    this.collapsedFacets = [];\n    this.collapsedFacetItems = [];\n\n    // Init collapsibles\n    collapsibleFactory();\n\n    // Init price validator\n    this.initPriceValidator();\n\n    // Show limited items by default\n    $(this.options.facetNavListSelector).each((index, navList) => {\n      this.collapseFacetItems($(navList));\n    });\n\n    // Mark initially collapsed accordions\n    $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\n      const $accordionToggle = $(accordionToggle);\n      const collapsible = $accordionToggle.data(\"collapsibleInstance\");\n\n      if (collapsible.isCollapsed) {\n        this.collapsedFacets.push(collapsible.targetId);\n      }\n    });\n\n    // Collapse all facets if initially hidden\n    // NOTE: Need to execute after Collapsible gets bootstrapped\n    setTimeout(() => {\n      if ($(this.options.componentSelector).is(\":hidden\")) {\n        this.collapseAllFacets();\n      }\n    });\n\n    // Observe user events\n    this.onStateChange = this.onStateChange.bind(this);\n    this.onToggleClick = this.onToggleClick.bind(this);\n    this.onAccordionToggle = this.onAccordionToggle.bind(this);\n    this.onClearFacet = this.onClearFacet.bind(this);\n    this.onFacetClick = this.onFacetClick.bind(this);\n    this.onRangeSubmit = this.onRangeSubmit.bind(this);\n    this.onSortBySubmit = this.onSortBySubmit.bind(this);\n    this.filterFacetItems = this.filterFacetItems.bind(this);\n\n    this.bindEvents();\n\n    console.log(\"faceted-search.js\");\n  }\n\n  // Public methods\n  refreshView(content) {\n    if (content) {\n      this.callback(content);\n    }\n\n    // Init collapsibles\n    collapsibleFactory();\n\n    // Init price validator\n    this.initPriceValidator();\n\n    // Restore view state\n    this.restoreCollapsedFacets();\n    this.restoreCollapsedFacetItems();\n\n    // Bind events\n    this.bindEvents();\n\n    //console.log(\"display refreshed\");\n  }\n\n  updateView() {\n    $(this.options.blockerSelector).show();\n    console.log(urlUtils.getUrl());\n    //console.log(this.requestOptions);\n    api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n      $(this.options.blockerSelector).hide();\n\n      if (err) {\n        throw new Error(err);\n      }\n      // console.log(content);\n      // Refresh view with new content\n      this.refreshView(content);\n\n      // this.customLoadProductSizes();\n      // initialize the slider\n      // $('[data-slick]').slick();\n    });\n  }\n\n  customLoadProductSizes() {\n    var listProducts = $(\".productGrid li.product\");\n    listProducts.each(function (id, li) {\n      // display discounted price\n      //var Product = $(li);\n      var proID = $(this).find(\".ProductIDs\").text();\n      var forProID = $(this).find(\".ProductIDsOnly\").text();\n      var proPrice = $(this).find(\".mainLoadedPrice\").text();\n      var discountedPrice = (\n        Number(proPrice.trim().replace(\"$\", \"\")) * Number(0.9)\n      ).toFixed(2);\n      //console.log(discountedPrice);\n      //console.log(proPrice);\n\n      $(\".discountedPriceCategory-\" + forProID).html(\"$\" + discountedPrice);\n\n      //var Product = $(li);\n      // var proID = $(this).find(\".ProductIDs\").text();\n      // //console.log(proID);\n\n      $(\"#loadQuickView-\" + proID).html(\n        '<div id=\"loaderimage\" class=\"loadingOverlay\" style=\"display: block;position: relative !important; top: 22px!important;\"></div>'\n      );\n      //return;\n      utils.api.product.getById(\n        proID,\n        { template: \"products/quick-view-options\" },\n        (err, response) => {\n          if (err) {\n            throw new Error(err);\n          }\n          // console.log(response);\n          // loop the class\n          var availableSizes = \"\";\n          $(response)\n            .find(\".form-option\")\n            .each(function (i, obj) {\n              //console.log($(this).html());\n              availableSizes +=\n                \"<label class='form-option' >\" + $(this).html() + \"</label>\";\n            });\n\n          $(\"#loadQuickView-\" + proID).html(availableSizes);\n        }\n      );\n    });\n  }\n\n  expandFacetItems($navList) {\n    const id = $navList.attr(\"id\");\n\n    // Remove\n    this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n  }\n\n  collapseFacetItems($navList) {\n    const id = $navList.attr(\"id\");\n    const hasMoreResults = $navList.data(\"hasMoreResults\");\n\n    if (hasMoreResults) {\n      this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\n    } else {\n      this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n    }\n  }\n\n  toggleFacetItems($navList) {\n    const id = $navList.attr(\"id\");\n\n    // Toggle depending on `collapsed` flag\n    if (_.includes(this.collapsedFacetItems, id)) {\n      this.getMoreFacetResults($navList);\n\n      return true;\n    }\n\n    this.collapseFacetItems($navList);\n\n    return false;\n  }\n\n  getMoreFacetResults($navList) {\n    const facet = $navList.data(\"facet\");\n    const facetUrl = urlUtils.getUrl();\n\n    this.options.modal.open();\n    this.options.modalOpen = true;\n\n    if (this.requestOptions.showMore) {\n      api.getPage(\n        facetUrl,\n        {\n          template: this.requestOptions.showMore,\n          params: {\n            list_all: facet,\n          },\n        },\n        (err, response) => {\n          if (err) {\n            throw new Error(err);\n          }\n\n          //   this.options.modal.open();\n          //   this.options.modalOpen = true;\n          this.options.modal.updateContent(response);\n        }\n      );\n    } else {\n      this.options.modal.close();\n      this.options.modalOpen = false;\n    }\n\n    this.collapseFacetItems($navList);\n\n    return false;\n  }\n\n  filterFacetItems(event) {\n    const $items = $(\".navList-item\");\n    const query = $(event.currentTarget).val().toLowerCase();\n\n    $items.each((index, element) => {\n      const text = $(element).text().toLowerCase();\n      if (text.indexOf(query) !== -1) {\n        $(element).show();\n      } else {\n        $(element).hide();\n      }\n    });\n  }\n\n  expandFacet($accordionToggle) {\n    const collapsible = $accordionToggle.data(\"collapsibleInstance\");\n\n    collapsible.open();\n  }\n\n  collapseFacet($accordionToggle) {\n    const collapsible = $accordionToggle.data(\"collapsibleInstance\");\n\n    collapsible.close();\n  }\n\n  collapseAllFacets() {\n    const $accordionToggles = $(this.options.accordionToggleSelector);\n\n    $accordionToggles.each((index, accordionToggle) => {\n      const $accordionToggle = $(accordionToggle);\n\n      this.collapseFacet($accordionToggle);\n    });\n  }\n\n  expandAllFacets() {\n    const $accordionToggles = $(this.options.accordionToggleSelector);\n\n    $accordionToggles.each((index, accordionToggle) => {\n      const $accordionToggle = $(accordionToggle);\n\n      this.expandFacet($accordionToggle);\n    });\n  }\n\n  // Private methods\n  initPriceValidator() {\n    if ($(this.options.priceRangeFormSelector).length === 0) {\n      return;\n    }\n\n    const validator = nod();\n    const selectors = {\n      errorSelector: this.options.priceRangeErrorSelector,\n      fieldsetSelector: this.options.priceRangeFieldsetSelector,\n      formSelector: this.options.priceRangeFormSelector,\n      maxPriceSelector: this.options.priceRangeMaxPriceSelector,\n      minPriceSelector: this.options.priceRangeMinPriceSelector,\n    };\n\n    Validators.setMinMaxPriceValidation(\n      validator,\n      selectors,\n      this.options.validationErrorMessages\n    );\n\n    this.priceRangeValidator = validator;\n  }\n\n  restoreCollapsedFacetItems() {\n    const $navLists = $(this.options.facetNavListSelector);\n\n    // Restore collapsed state for each facet\n    $navLists.each((index, navList) => {\n      const $navList = $(navList);\n      const id = $navList.attr(\"id\");\n      const shouldCollapse = _.includes(this.collapsedFacetItems, id);\n\n      if (shouldCollapse) {\n        this.collapseFacetItems($navList);\n      } else {\n        this.expandFacetItems($navList);\n      }\n    });\n  }\n\n  restoreCollapsedFacets() {\n    const $accordionToggles = $(this.options.accordionToggleSelector);\n\n    $accordionToggles.each((index, accordionToggle) => {\n      const $accordionToggle = $(accordionToggle);\n      const collapsible = $accordionToggle.data(\"collapsibleInstance\");\n      const id = collapsible.targetId;\n      const shouldCollapse = _.includes(this.collapsedFacets, id);\n\n      if (shouldCollapse) {\n        this.collapseFacet($accordionToggle);\n      } else {\n        this.expandFacet($accordionToggle);\n      }\n    });\n  }\n\n  bindEvents() {\n    // Clean-up\n    this.unbindEvents();\n\n    // DOM events\n    $(window).on(\"statechange\", this.onStateChange);\n    $(window).on(\"popstate\", this.onPopState);\n    $(document).on(\n      \"click\",\n      this.options.showMoreToggleSelector,\n      this.onToggleClick\n    );\n    $(document).on(\n      \"toggle.collapsible\",\n      this.options.accordionToggleSelector,\n      this.onAccordionToggle\n    );\n    $(document).on(\n      \"keyup\",\n      this.options.facetedSearchFilterItems,\n      this.filterFacetItems\n    );\n    $(this.options.clearFacetSelector).on(\"click\", this.onClearFacet);\n\n    // Hooks\n    hooks.on(\"facetedSearch-facet-clicked\", this.onFacetClick);\n    hooks.on(\"facetedSearch-range-submitted\", this.onRangeSubmit);\n    hooks.on(\"sortBy-submitted\", this.onSortBySubmit);\n  }\n\n  unbindEvents() {\n    // DOM events\n    $(window).off(\"statechange\", this.onStateChange);\n    $(window).off(\"popstate\", this.onPopState);\n    $(document).off(\n      \"click\",\n      this.options.showMoreToggleSelector,\n      this.onToggleClick\n    );\n    $(document).off(\n      \"toggle.collapsible\",\n      this.options.accordionToggleSelector,\n      this.onAccordionToggle\n    );\n    $(document).off(\n      \"keyup\",\n      this.options.facetedSearchFilterItems,\n      this.filterFacetItems\n    );\n    $(this.options.clearFacetSelector).off(\"click\", this.onClearFacet);\n\n    // Hooks\n    hooks.off(\"facetedSearch-facet-clicked\", this.onFacetClick);\n    hooks.off(\"facetedSearch-range-submitted\", this.onRangeSubmit);\n    hooks.off(\"sortBy-submitted\", this.onSortBySubmit);\n  }\n\n  onClearFacet(event) {\n    const $link = $(event.currentTarget);\n    const url = $link.attr(\"href\");\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    // Update URL\n    urlUtils.goToUrl(url);\n  }\n\n  onToggleClick(event) {\n    const $toggle = $(event.currentTarget);\n    const $navList = $($toggle.attr(\"href\"));\n\n    // Prevent default\n    event.preventDefault();\n\n    // Toggle visible items\n    this.toggleFacetItems($navList);\n  }\n\n  onFacetClick(event, currentTarget) {\n    const $link = $(currentTarget);\n    const url = $link.attr(\"href\");\n\n    event.preventDefault();\n\n    $link.toggleClass(\"is-selected\");\n\n    // Update URL\n    urlUtils.goToUrl(url);\n\n    if (this.options.modalOpen) {\n      this.options.modal.close();\n    }\n  }\n\n  onSortBySubmit(event, currentTarget) {\n    const url = Url.parse(window.location.href, true);\n    const queryParams = $(currentTarget).serialize().split(\"=\");\n\n    url.query[queryParams[0]] = queryParams[1];\n    delete url.query.page;\n\n    // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n    const urlQueryParams = {};\n    Object.assign(urlQueryParams, url.query);\n\n    event.preventDefault();\n\n    urlUtils.goToUrl(\n      Url.format({\n        pathname: url.pathname,\n        search: urlUtils.buildQueryString(urlQueryParams),\n      })\n    );\n  }\n\n  onRangeSubmit(event, currentTarget) {\n    event.preventDefault();\n\n    if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\n      return;\n    }\n\n    const url = Url.parse(window.location.href, true);\n    let queryParams = decodeURI($(currentTarget).serialize()).split(\"&\");\n    queryParams = urlUtils.parseQueryParams(queryParams);\n\n    for (const key in queryParams) {\n      if (queryParams.hasOwnProperty(key)) {\n        url.query[key] = queryParams[key];\n      }\n    }\n\n    // Url object `query` is not a traditional JavaScript Object on all systems, clone it instead\n    const urlQueryParams = {};\n    Object.assign(urlQueryParams, url.query);\n\n    urlUtils.goToUrl(\n      Url.format({\n        pathname: url.pathname,\n        search: urlUtils.buildQueryString(urlQueryParams),\n      })\n    );\n  }\n\n  onStateChange() {\n    //this.updateView();\n    // reload the page, instead of ajax refresh view\n    return window.location.reload();\n  }\n\n  onAccordionToggle(event) {\n    const $accordionToggle = $(event.currentTarget);\n    const collapsible = $accordionToggle.data(\"collapsibleInstance\");\n    const id = collapsible.targetId;\n\n    if (collapsible.isCollapsed) {\n      this.collapsedFacets = _.union(this.collapsedFacets, [id]);\n    } else {\n      this.collapsedFacets = _.without(this.collapsedFacets, id);\n    }\n  }\n\n  onPopState() {\n    const currentUrl = window.location.href;\n    const searchParams = new URLSearchParams(currentUrl);\n    // If searchParams does not contain a page value then modify url query string to have page=1\n    if (!searchParams.has(\"page\")) {\n      const linkUrl = $(\".pagination-link\").attr(\"href\");\n      const re = /page=[0-9]+/i;\n      const updatedLinkUrl = linkUrl.replace(re, \"page=1\");\n      window.history.replaceState({}, document.title, updatedLinkUrl);\n    }\n    $(window).trigger(\"statechange\");\n  }\n}\n\nexport default FacetedSearch;\n"],"sourceRoot":""}